

06-10-2023 Page Object Model Design Pattern


RECAP:

How to create and execute suites like Smoke & Regression?
1. Create test cases in JIRA (documentation). Usually we create 5-15 test cases per sprint (2 weeks).
2. Automate your scripts with a well-designed UI Automation framework
3. Have around 80-100 test scripts automated, consider creating suites
4. Decide which test cases will be critical and which ones are Regression
5. Create xml files to group together our Smoke and Regression scripts
6. Execute your xml files locally and make sure it works as expected
7. Integrate your xml files with Maven using profiles in the pom.xml
8. Execute your profiles-builds-goals using Maven commands
	mvn test -PSmoke
	mvn test -PRegression
9. Check your REPORTS under the "target" folder
10. Integrate your Suites with Jenkins jobs to be automatically triggered with scheduled time!


JENKINS
Where is your code -> git repo (github, gitlab, bitbucket)
What is the build command -> mvn test -PSmoke or mvn test -PRegression
When to execute -> Smoke daily at 6 AM and Regression every other Friday 3 AM
Who to send this report result -> akin@gmail.com, okan@gmail.com, admin@gmail.com



PAGE OBJECT MODEL
-IT IS NOT pom.xml (Project Object Model)
-This is a design pattern
-We locate all the elements of a web page in a class and also create reusable methods for that specific page.

    @FindBy(css = "")
    @FindBy(xpath = "")
    @FindBy(id = "")
    @FindBy(name = "")
    @FindBy(tagName = "")
    @FindBy(linkText = "")
    @FindBy(partialLinkText = "")
    @FindBy(className = "")





<p class="has-text-danger">Email input cannot be left empty!</p>

<p id="confirmation_message" class="has-text-success">A link to reset your password has been sent to your email address.</p>


//p[starts-with(@class, 'has-text-')]
p[class^='hast-text-']



206 lines
142


SUBMIT PROJECT-3 with your PAGE OBJECT MODEL DESIGN ;)


TEST CASE
1. Go to https://www.google.com/
2. Search for "canvas painting"
3. Validate the results are more than zero


STEPS to Follow:
1. Execute your test case manually and make sure it pass
2. Start working on your Page Object Model and locate elements there
3. Declare the page objects in the scripts base
4. Initialize the declared objects in the script class